{"ast":null,"code":"var _jsxFileName = \"/home/asmaa/movie/src/changeLanguage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { langContext } from \"./context/langContext\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChangeLanguage() {\n  _s();\n\n  const {\n    contextLang,\n    setContextLang\n  } = useContext(langContext);\n  const [lang, setlang] = useState(() => {\n    // getting stored value\n    const saved = localStorage.getItem(\"lang\");\n    const initialValue = JSON.parse(saved);\n\n    if (initialValue != null) {\n      setContextLang(initialValue);\n    } else {\n      setContextLang(\"English\");\n    } //  return initialValue || \"\";\n\n  });\n  useEffect(() => {\n    // storing input name\n    localStorage.setItem(\"lang\", JSON.stringify(contextLang));\n  }, [contextLang]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setContextLang(contextLang === \"English\" ? \"العربية\" : \"English\"),\n      children: contextLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 6\n  }, this);\n}\n\n_s(ChangeLanguage, \"bpM/BiV60o/geof4+yQz7kJ7Yxc=\");\n\n_c = ChangeLanguage;\nexport default ChangeLanguage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeLanguage\");","map":{"version":3,"sources":["/home/asmaa/movie/src/changeLanguage.js"],"names":["useContext","langContext","useState","useEffect","ChangeLanguage","contextLang","setContextLang","lang","setlang","saved","localStorage","getItem","initialValue","JSON","parse","setItem","stringify"],"mappings":";;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAAQC,QAAR,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCN,UAAU,CAACC,WAAD,CAAlD;AAED,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,MAAM;AACpC;AACA,UAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;AACA,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAArB;;AACA,QAAGG,YAAY,IAAI,IAAnB,EAAwB;AACtBN,MAAAA,cAAc,CAACM,YAAD,CAAd;AACD,KAFD,MAEM;AACJN,MAAAA,cAAc,CAAC,SAAD,CAAd;AACD,KARmC,CASpC;;AACD,GAV8B,CAAhC;AAWDH,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAO,IAAAA,YAAY,CAACK,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAeX,WAAf,CAA7B;AACD,GAHM,EAGJ,CAACA,WAAD,CAHI,CAAT;AAKE,sBACG;AAAA,2BACC;AACJ,MAAA,OAAO,EAAE,MAAKC,cAAc,CAACD,WAAW,KAAK,SAAhB,GAA4B,SAA5B,GAAwC,SAAzC,CADxB;AAAA,gBAEEA;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADH;AAUD;;GA7BQD,c;;KAAAA,c;AA+BT,eAAeA,cAAf","sourcesContent":["\nimport { useContext } from \"react\";\nimport { langContext } from \"./context/langContext\";\nimport {useState , useEffect } from \"react\";\n\nfunction ChangeLanguage() {\n  const { contextLang, setContextLang } = useContext(langContext)\n\n const [lang, setlang] = useState(() => {\n    // getting stored value\n    const saved = localStorage.getItem(\"lang\");\n    const initialValue = JSON.parse(saved);\n    if(initialValue != null){\n      setContextLang(initialValue)\n    }else {\n      setContextLang(\"English\")\n    }\n    //  return initialValue || \"\";\n  });\nuseEffect(() => {\n    // storing input name\n    localStorage.setItem(\"lang\", JSON.stringify(contextLang));\n  }, [contextLang]);\n\n  return (\n\t \t\t\t<div>\n\t \t\t\t\t<button \n\t onClick={()=> setContextLang(contextLang === \"English\" ? \"العربية\" : \"English\")}> \n\t \t\t\t\t\t{contextLang}\n\t \t\t\t\t</button>\n\t \t\t\t</div>\n\t \t\t\n\n  );\n}\n\nexport default ChangeLanguage;"]},"metadata":{},"sourceType":"module"}